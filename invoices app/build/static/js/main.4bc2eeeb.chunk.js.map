{"version":3,"sources":["components/AppProvider.js","components/Aside.js","components/Header.js","components/Invoices.js","components/AddInvoice.js","components/InvoiceHint.js","components/Content.js","components/Alert.js","components/CurrentInvoice.js","components/Main.js","components/App.js","index.js"],"names":["InvoiceContext","React","createContext","AppProvider","children","useState","addInv","setAddInv","isNew","setIsNew","isDraft","setIsDraft","addItem","setAddItem","isEdit","setIsEdit","isAlert","setIsAlert","updateInvoice","setUpdateInvoice","final","setFinal","isLight","setIsLight","Date","date","setDate","draft","pending","paid","filterByStatus","setFilterByStatus","getLocalStorage","localStorage","getItem","useLocalStorage","JSON","parse","getThemeLocalStorage","useThemeLocalStorage","months","itemListID","generateID","itemName","qty","price","total","itemsList","setItemsList","invoiceID","streetFrom","cityFrom","postCodeFrom","countryFrom","clientName","clientEmail","streetTo","cityTo","postCodeTo","countryTo","paymentTerms","projectDescription","status","invoiceData","setInvoiceData","resetInvoiceData","resetItemList","letters","numbers","id","i","push","Math","floor","random","length","join","useReducer","state","action","type","payload","itemList","filter","invoice","map","data","list","Error","invoices","dispatch","useEffect","setItem","stringify","document","body","classList","add","remove","Provider","value","DateFn","day","getDate","month","getMonth","year","getFullYear","paymentDue","toMilliSec","getMilliSec","getTime","paymentDueDate","useGlobalContext","useContext","Aside","className","href","src","alt","onClick","target","rel","Header","style","overflow","querySelector","svg","toggle","handleFilterAppear","name","htmlFor","e","previousSibling","checked","Invoices","keys","Object","values","index","flat","to","AddInvoice","onSubmit","preventDefault","newItem","newItemsList","handleSubmit","onChange","calendarIcon","clearIcon","format","item","handleTotal","ele","required","handleDelete","InvoiceHint","Content","Alert","CurrentInvoice","param","useParams","find","finalPriceReduce","reduce","acc","scope","colSpan","Main","exact","path","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4bc2eeeb.chunk.js","sourcesContent":["import React, { useContext, useEffect, useReducer, useState } from \"react\";\n\nconst InvoiceContext = React.createContext();\n\nfunction AppProvider({ children }) {\n  const [addInv, setAddInv] = useState(false);\n  const [isNew, setIsNew] = useState(false);\n  const [isDraft, setIsDraft] = useState(false);\n  const [addItem, setAddItem] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [isAlert, setIsAlert] = useState(false);\n  const [updateInvoice, setUpdateInvoice] = useState(false);\n  const [final, setFinal] = useState([]);\n  const [isLight, setIsLight] = useState(false);\n  const [date, setDate] = useState(new Date());\n  const [filterByStatus, setFilterByStatus] = useState({\n    draft: false,\n    pending: false,\n    paid: false,\n  });\n\n  const getLocalStorage = localStorage.getItem(\"invoices\");\n  const useLocalStorage = getLocalStorage ? JSON.parse(getLocalStorage) : [];\n  const getThemeLocalStorage = localStorage.getItem(\"light\");\n  const useThemeLocalStorage = getThemeLocalStorage\n    ? JSON.parse(getThemeLocalStorage)\n    : \"\";\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  const [itemsList, setItemsList] = useState([\n    {\n      itemListID: generateID(),\n      itemName: \"\",\n      qty: 0,\n      price: 0,\n      total: 0.0,\n    },\n  ]);\n  const [invoiceData, setInvoiceData] = useState({\n    invoiceID: generateID(),\n    streetFrom: \"\",\n    cityFrom: \"\",\n    postCodeFrom: \"\",\n    countryFrom: \"\",\n    clientName: \"\",\n    clientEmail: \"\",\n    streetTo: \"\",\n    cityTo: \"\",\n    postCodeTo: \"\",\n    countryTo: \"\",\n    paymentTerms: 1,\n    projectDescription: \"\",\n    status: \"pending\",\n  });\n\n  const resetInvoiceData = {\n    ...invoiceData,\n    streetFrom: \"\",\n    cityFrom: \"\",\n    postCodeFrom: \"\",\n    countryFrom: \"\",\n    clientName: \"\",\n    clientEmail: \"\",\n    streetTo: \"\",\n    cityTo: \"\",\n    postCodeTo: \"\",\n    countryTo: \"\",\n    paymentTerms: 1,\n    projectDescription: \"\",\n  };\n\n  const resetItemList = {\n    ...itemsList,\n    itemListID: generateID(),\n    itemName: \"\",\n    qty: 0,\n    price: 0,\n    total: 0.0,\n  };\n\n  function generateID() {\n    const letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n    const numbers = \"0123456789\";\n    let id = [];\n    for (let i = 0; i <= 2; i++) {\n      id.push(letters[Math.floor(Math.random() * letters.length)]);\n    }\n    for (let i = 0; i <= 3; i++) {\n      id.push(numbers[Math.floor(Math.random() * numbers.length)]);\n    }\n    return id.join(\"\");\n  }\n\n  function DateFn(date) {\n    const day = new Date(date).getDate();\n    const month = months[new Date(date).getMonth()];\n    const year = new Date(date).getFullYear();\n    const fullDate = `${day} ${month} ${year}`;\n\n    return fullDate;\n  }\n\n  const paymentDue = (date, paymentTerms) => {\n    const toMilliSec = paymentTerms * 86400000;\n    const getMilliSec = new Date(date).getTime() + toMilliSec;\n    const paymentDueDate = new Date(getMilliSec);\n    const day = new Date(paymentDueDate).getDate();\n    const month = months[new Date(paymentDueDate).getMonth()];\n    const year = new Date(paymentDueDate).getFullYear();\n    const fullDate = `${day} ${month} ${year}`;\n\n    return fullDate;\n  };\n\n  const invoicesReducer = (state, action) => {\n    if (action.type === \"SAVE_PENDING\") {\n      const { invoiceData, itemsList, date } = action.payload;\n      return [\n        ...state,\n        {\n          ...invoiceData,\n          invoiceID: generateID(),\n          date: date,\n          itemList: [...itemsList],\n        },\n      ];\n    }\n    else if (action.type === \"SAVE_DRAFT\") {\n      const { invoiceData, itemsList, date } = action.payload;\n      return [\n        ...state,\n        {\n          ...invoiceData,\n          invoiceID: generateID(),\n          date: date,\n          status: \"draft\",\n          itemList: [...itemsList],\n        },\n      ];\n    }\n    else if (action.type === \"DELETE_INVOICE\") {\n      return state.filter((invoice) => invoice.invoiceID !== action.payload);\n    } else if (action.type === \"PAID_ITEM\") {\n      return state.map((invoice) => {\n        if (invoice.invoiceID === action.payload) {\n          return { ...invoice, status: \"paid\" };\n        } else {\n          return invoice;\n        }\n      });\n    }\n    else if (action.type === \"EDIT_ITEM\") {\n      const { data, list, date } = action.payload;\n\n      return state.map((invoice) => {\n        if (invoice.invoiceID === data.invoiceID) {\n          return {\n            ...invoice,\n            ...data,\n            date,\n            itemList: [...list],\n          };\n        } else {\n          return invoice;\n        }\n      });\n    }\n    else {\n      throw new Error(\"No matching action\");\n    }\n  };\n\n  const [invoices, dispatch] = useReducer(invoicesReducer, useLocalStorage);\n\n  useEffect(() => {\n    localStorage.setItem(\"invoices\", JSON.stringify(invoices));\n  }, [invoices]);\n\n  useEffect(() => {\n    if (useThemeLocalStorage) {\n      document.body.classList.add(\"light\");\n      setIsLight(true);\n    } else {\n      document.body.classList.remove(\"light\");\n    }\n  }, [useThemeLocalStorage]);\n\n  return (\n    <InvoiceContext.Provider\n      value={{\n        date,\n        setDate,\n        itemsList,\n        setItemsList,\n        invoiceData,\n        setInvoiceData,\n        generateID,\n        addInv,\n        setAddInv,\n        isNew,\n        setIsNew,\n        isEdit,\n        setIsEdit,\n        isDraft,\n        setIsDraft,\n        invoices,\n        dispatch,\n        filterByStatus,\n        setFilterByStatus,\n        final,\n        setFinal,\n        addItem,\n        setAddItem,\n        updateInvoice,\n        setUpdateInvoice,\n        DateFn,\n        paymentDue,\n        isAlert,\n        setIsAlert,\n        resetItemList,\n        resetInvoiceData,\n        isLight,\n        setIsLight,\n        useThemeLocalStorage,\n      }}\n    >\n      {children}\n    </InvoiceContext.Provider>\n  );\n}\n\nexport const useGlobalContext = () => useContext(InvoiceContext);\n\nexport { AppProvider };\n","import { BsSun, BsMoon } from \"react-icons/bs\";\nimport { FaUserSecret } from \"react-icons/fa\";\nimport { useGlobalContext } from \"./AppProvider\";\nfunction Aside() {\n  const { isLight, setIsLight, useThemeLocalStorage } = useGlobalContext();\n  return (\n    <aside className=\"aside\">\n      <div className=\"col-sm-6\">\n        <div className=\"logo\">\n          <a href=\"/\">\n            <img src=\"./image/logo.png\" alt=\"logo\" />\n          </a>\n        </div>\n      </div>\n      <div className=\"col-sm-6 text-center\">\n        <div className=\"setting\">\n          <div className=\"theme\">\n            <button\n              className=\"toggle-theme\"\n              onClick={() => {\n                setIsLight(!isLight);\n                localStorage.setItem(\"light\", !isLight);\n              }}\n            >\n              {useThemeLocalStorage ? <BsMoon /> : <BsSun />}\n            </button>\n          </div>\n          <div className=\"user\">\n            <a\n              href=\"https://evan-dolatowski.netlify.app\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <FaUserSecret />\n            </a>\n          </div>\n        </div>\n      </div>\n    </aside>\n  );\n}\n\nexport default Aside;\n","import { useEffect } from \"react\";\nimport { BiChevronDown } from \"react-icons/bi\";\nimport { useGlobalContext } from \"./AppProvider\";\n\nfunction Header() {\n  const { addInv, setAddInv, final, setFilterByStatus, filterByStatus } =\n    useGlobalContext();\n\n  const handleFilterAppear = () => {\n    const list = document.querySelector(\".filter-list\");\n    const svg = document.querySelector(\".filter svg\");\n\n    list.classList.toggle(\"active\");\n    svg.classList.toggle(\"active\");\n  };\n\n  useEffect(() => {\n    if (addInv) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"auto\";\n    }\n  }, [addInv]);\n\n  return (\n    <header className=\"header col-lg-9 m-auto text-capitalize\">\n      <div className=\"col-lg-6\">\n        <div className=\"invoices-counter\">\n          <h2>Invoices</h2>\n          <span>There are {final.length} total invoices</span>\n        </div>\n      </div>\n      <div className=\"col-lg-6\">\n        <div className=\"invoice-actions\">\n          <div className=\"filter\">\n            <button\n              className=\"filter-btn\"\n              onClick={() => {\n                handleFilterAppear();\n              }}\n            >\n              Filter by status\n            </button>\n            <BiChevronDown />\n\n            <ul className=\"filter-list\">\n              <li>\n                <input type=\"checkbox\" name=\"check\" id=\"draft-input\" />\n                <label\n                  htmlFor=\"draft-input\"\n                  onClick={(e) => {\n                    if (!e.target.previousSibling.checked) {\n                      setFilterByStatus({\n                        ...filterByStatus,\n                        draft: true,\n                      });\n                    } else {\n                      setFilterByStatus({\n                        ...filterByStatus,\n                        draft: false,\n                      });\n                    }\n                  }}\n                >\n                  draft\n                </label>\n              </li>\n              <li>\n                <input type=\"checkbox\" name=\"check\" id=\"pending-input\" />\n                <label\n                  htmlFor=\"pending-input\"\n                  onClick={(e) => {\n                    if (!e.target.previousSibling.checked) {\n                      setFilterByStatus({\n                        ...filterByStatus,\n                        pending: true,\n                      });\n                    } else {\n                      setFilterByStatus({\n                        ...filterByStatus,\n                        pending: false,\n                      });\n                    }\n                  }}\n                >\n                  pending\n                </label>\n              </li>\n              <li>\n                <input type=\"checkbox\" name=\"check\" id=\"paid-input\" />\n                <label\n                  htmlFor=\"paid-input\"\n                  onClick={(e) => {\n                    if (!e.target.previousSibling.checked) {\n                      setFilterByStatus({\n                        ...filterByStatus,\n                        paid: true,\n                      });\n                    } else {\n                      setFilterByStatus({\n                        ...filterByStatus,\n                        paid: false,\n                      });\n                    }\n                  }}\n                >\n                  paid\n                </label>\n              </li>\n            </ul>\n          </div>\n          <button className=\"add-invoice\" onClick={() => setAddInv(true)}>\n            <img src=\"./image/plus.svg\" alt=\"add\" />\n            <h6>New Invoice</h6>\n          </button>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { BiChevronRight } from \"react-icons/bi\";\nimport { useGlobalContext } from \"./AppProvider\";\nimport { Link } from \"react-router-dom\";\n\nfunction Invoices() {\n  const { invoices, filterByStatus, final, setFinal, paymentDue } =\n    useGlobalContext();\n\n  useEffect(() => {\n    const keys = Object.keys(filterByStatus);\n    const values = Object.values(filterByStatus);\n    const data = values.map((value, index) => {\n      return invoices.filter((invoice) => {\n        if (value) {\n          return invoice.status === keys[index];\n        } else {\n          return \"\";\n        }\n      });\n    });\n\n    const finalResult = () => {\n      if (data.flat().length > 0) {\n        setFinal(data.flat());\n      } else {\n        setFinal(invoices);\n      }\n    };\n\n    finalResult();\n  }, [filterByStatus, invoices, setFinal]);\n\n  return (\n    <section className=\"invoices-container col-lg-8 m-auto mt-5 text-capitalize\">\n      {final.map((invoice) => {\n        const { invoiceID, clientName, itemList, date, status, paymentTerms } =\n          invoice;\n        let total = 0;\n        itemList.map((price) => {\n          return (total += price.total);\n        });\n\n        return (\n          <Link to={`/${invoiceID}`} className=\"invoice\" key={invoiceID}>\n            <div className=\"row w-100\">\n              <div className=\"col-md-7 col-12\">\n                <div className=\"invoice-info\">\n                  <b className=\"id\">\n                    <span>#</span>\n                    {invoiceID}\n                  </b>\n                  <p className=\"due-date\">\n                    Due {paymentDue(date, paymentTerms)}\n                  </p>\n                  <p className=\"name\">{clientName || \"N/A\"}</p>\n                </div>\n              </div>\n              <div className=\"col-md-5 col-12\">\n                <div className=\"invoice-status\">\n                  <b className=\"invoice-cost\">\n                    <span>$</span>\n                    {total}\n                  </b>\n                  <div className=\"status-container\">\n                    <p className={`status ${status}`}>{status}</p>\n                    <BiChevronRight />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Link>\n        );\n      })}\n    </section>\n  );\n}\n\nexport default Invoices;\n","import { AiFillCloseCircle } from \"react-icons/ai\";\nimport { GoCalendar } from \"react-icons/go\";\nimport { BsBasket } from \"react-icons/bs\";\nimport DatePicker from \"react-date-picker\";\nimport { useGlobalContext } from \"./AppProvider\";\n\nfunction AddInvoice() {\n  const {\n    date,\n    setDate,\n    invoiceData,\n    setInvoiceData,\n    itemsList,\n    setItemsList,\n    generateID,\n    isNew,\n    setIsNew,\n    isEdit,\n    setIsEdit,\n    isDraft,\n    setIsDraft,\n    setAddInv,\n    dispatch,\n    addItem,\n    setAddItem,\n    addInv,\n    updateInvoice,\n    setUpdateInvoice,\n    resetInvoiceData,\n    resetItemList,\n  } = useGlobalContext();\n  const {\n    streetFrom,\n    cityFrom,\n    postCodeFrom,\n    countryFrom,\n    clientName,\n    clientEmail,\n    streetTo,\n    cityTo,\n    postCodeTo,\n    countryTo,\n    paymentTerms,\n    projectDescription,\n  } = invoiceData;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isNew) {\n      dispatch({\n        type: \"SAVE_PENDING\",\n        payload: { invoiceData, itemsList, date },\n      });\n\n      setInvoiceData(resetInvoiceData);\n      setItemsList([resetItemList]);\n      setAddInv(false);\n      setIsNew(false);\n      setIsDraft(false);\n      setIsEdit(false);\n      setUpdateInvoice(false);\n    } else if (isDraft) {\n      dispatch({\n        type: \"SAVE_DRAFT\",\n        payload: { invoiceData, itemsList, date },\n      });\n\n      setInvoiceData(resetInvoiceData);\n      setItemsList([resetItemList]);\n      setAddInv(false);\n      setIsNew(false);\n      setIsDraft(false);\n      setIsEdit(false);\n      setUpdateInvoice(false);\n    } else if (updateInvoice) {\n      dispatch({\n        type: \"EDIT_ITEM\",\n        payload: { data: invoiceData, list: itemsList, date },\n      });\n      setInvoiceData(resetInvoiceData);\n      setItemsList([resetItemList]);\n      setAddInv(false);\n      setIsNew(false);\n      setIsDraft(false);\n      setIsEdit(false);\n      setUpdateInvoice(false);\n    } else if (addItem) {\n      const newItem = {\n        itemListID: generateID(),\n        itemName: \"\",\n        qty: 0,\n        price: 0,\n        total: 0.0,\n      };\n      const newItemsList = [...itemsList, newItem];\n      setItemsList(newItemsList);\n    }\n  };\n\n  const handleDelete = (id) => {\n    const newItemsList = itemsList.filter((item) => item.itemListID !== id);\n    setItemsList(newItemsList);\n  };\n\n  \n\n  return (\n    <article className=\"addInvoice-container\">\n      <div className=\"container\">\n        <div className=\"addNewInvoice\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-9\">\n              <header className=\"addInvoices-header\">\n                <h2 className=\"heading\">new invoice</h2>\n                <button\n                  className=\"close-btn\"\n                  onClick={() => {\n                    setAddInv(false);\n                    setIsEdit(false);\n                    setInvoiceData(resetInvoiceData);\n                    setItemsList([resetItemList]);\n                  }}\n                >\n                  <AiFillCloseCircle />\n                </button>\n              </header>\n            </div>\n            <div className=\"col-md-9\">\n              <form\n                action=\"#\"\n                className=\"form\"\n                onSubmit={(e) => handleSubmit(e)}\n              >\n                <section className=\"bill-form form-section\">\n                  <h6 className=\"form-headers\">bill form</h6>\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <div className=\"form-control\">\n                        <label htmlFor=\"streetAdressFrom\">street adress</label>\n                        <input\n                          type=\"text\"\n                          name=\"streetAdress\"\n                          id=\"streetAdressFrom\"\n                          className=\"input\"\n                          value={streetFrom}\n                          onChange={(e) => {\n                            setInvoiceData({\n                              ...invoiceData,\n                              streetFrom: e.target.value,\n                            });\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-6 col-sm-4\">\n                      <div className=\"form-control\">\n                        <label htmlFor=\"cityFrom\">city</label>\n                        <input\n                          type=\"text\"\n                          id=\"cityFrom\"\n                          className=\"input\"\n                          value={cityFrom}\n                          onChange={(e) => {\n                            setInvoiceData({\n                              ...invoiceData,\n                              cityFrom: e.target.value,\n                            });\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-6 col-sm-4\">\n                      <div className=\"form-control\">\n                        <label htmlFor=\"postCodeFrom\">post code</label>\n                        <input\n                          type=\"text\"\n                          name=\"postCode\"\n                          id=\"postCodeFrom\"\n                          className=\"input\"\n                          value={postCodeFrom}\n                          onChange={(e) => {\n                            setInvoiceData({\n                              ...invoiceData,\n                              postCodeFrom: e.target.value,\n                            });\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-6 col-sm-4\">\n                      <div className=\"form-control\">\n                        <label htmlFor=\"countryFrom\">country</label>\n                        <input\n                          type=\"text\"\n                          name=\"country\"\n                          id=\"countryFrom\"\n                          className=\"input\"\n                          value={countryFrom}\n                          onChange={(e) => {\n                            setInvoiceData({\n                              ...invoiceData,\n                              countryFrom: e.target.value,\n                            });\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </section>\n                <section className=\"bill-to form-section\">\n                  <h6 className=\"form-headers\">bill to</h6>\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <div className=\"form-control\">\n                        <label htmlFor=\"clientName\">client's name</label>\n                        <input\n                          type=\"text\"\n                          className=\"input\"\n                          id=\"clientName\"\n                          name=\"clientName\"\n                          value={clientName}\n                          onChange={(e) => {\n                            setInvoiceData({\n                              ...invoiceData,\n                              clientName: e.target.value,\n                            });\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-6\">\n                      <div className=\"form-control\">\n                        <label htmlFor=\"clientEmail\">client's email</label>\n                        <input\n                          type=\"email\"\n                          className=\"input\"\n                          id=\"clientEmail\"\n                          name=\"clientEmail\"\n                          value={clientEmail}\n                          onChange={(e) => {\n                            setInvoiceData({\n                              ...invoiceData,\n                              clientEmail: e.target.value,\n                            });\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-6\">\n                      <div className=\"form-control\">\n                        <label htmlFor=\"streetAdressTo\">street adress</label>\n                        <input\n                          type=\"text\"\n                          className=\"input\"\n                          id=\"streetAdressTo\"\n                          name=\"streetAdress\"\n                          value={streetTo}\n                          onChange={(e) => {\n                            setInvoiceData({\n                              ...invoiceData,\n                              streetTo: e.target.value,\n                            });\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-6 col-sm-4\">\n                      <div className=\"form-control\">\n                        <label htmlFor=\"cityTo\">city</label>\n                        <input\n                          type=\"text\"\n                          name=\"city\"\n                          id=\"cityTo\"\n                          className=\"input\"\n                          value={cityTo}\n                          onChange={(e) => {\n                            setInvoiceData({\n                              ...invoiceData,\n                              cityTo: e.target.value,\n                            });\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-6 col-sm-4\">\n                      <div className=\"form-control\">\n                        <label htmlFor=\"postCodeTo\">post code</label>\n                        <input\n                          type=\"text\"\n                          name=\"postCode\"\n                          id=\"postCodeTo\"\n                          className=\"input\"\n                          value={postCodeTo}\n                          onChange={(e) => {\n                            setInvoiceData({\n                              ...invoiceData,\n                              postCodeTo: e.target.value,\n                            });\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-6 col-sm-4\">\n                      <div className=\"form-control\">\n                        <label htmlFor=\"countryTo\">country</label>\n                        <input\n                          type=\"text\"\n                          name=\"country\"\n                          id=\"countryTo\"\n                          className=\"input\"\n                          value={countryTo}\n                          onChange={(e) => {\n                            setInvoiceData({\n                              ...invoiceData,\n                              countryTo: e.target.value,\n                            });\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-6\">\n                      <div className=\"form-control\">\n                        <label htmlFor=\"date\">date</label>\n                        <div className=\"input\">\n                          <DatePicker\n                            onChange={setDate}\n                            value={date}\n                            id=\"date\"\n                            calendarIcon={null}\n                            clearIcon={null}\n                            format=\"dd-MM-yy\"\n                          />\n                          <GoCalendar className=\"calendar-icon\" />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-6\">\n                      <div className=\"form-control\">\n                        <label htmlFor=\"paymentTerms\">payment terms</label>\n                        <select\n                          name=\"paymentTerms\"\n                          id=\"paymentTerms\"\n                          className=\"select\"\n                          value={paymentTerms}\n                          onChange={(e) => {\n                            setInvoiceData({\n                              ...invoiceData,\n                              paymentTerms: e.target.value,\n                            });\n                          }}\n                        >\n                          <option value=\"1\">net 1 day</option>\n                          <option value=\"7\">net 7 day</option>\n                          <option value=\"14\">net 14 day</option>\n                          <option value=\"30\">net 30 day</option>\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"col-12\">\n                      <div className=\"form-control\">\n                        <label htmlFor=\"projectDescription\">\n                          Project Description\n                        </label>\n                        <input\n                          type=\"text\"\n                          id=\"projectDescription\"\n                          className=\"input\"\n                          name=\"projectDescription\"\n                          value={projectDescription}\n                          onChange={(e) => {\n                            setInvoiceData({\n                              ...invoiceData,\n                              projectDescription: e.target.value,\n                            });\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </section>\n                <section className=\"form-section item-list\">\n                  <h6 className=\"form-headers\">item list</h6>\n                  {itemsList.map((item) => {\n                    const { itemListID, itemName, qty, price, total } = item;\n\n                    const handleTotal = (qty, price) => {\n                      return +qty * +price;\n                    };\n\n                    return (\n                      <div className=\"item\" key={itemListID}>\n                        <div className=\"row align-items-center\">\n                          <div className=\"col-8 col-md-4\">\n                            <div className=\"form-control\">\n                              <label htmlFor=\"itemName\">item name</label>\n                              <input\n                                type=\"text\"\n                                name=\"itemName\"\n                                id=\"itemName\"\n                                className=\"input\"\n                                value={itemName}\n                                onChange={(e) => {\n                                  setItemsList(\n                                    itemsList.map((ele) =>\n                                      ele.itemListID === itemListID\n                                        ? { ...ele, itemName: e.target.value }\n                                        : ele\n                                    )\n                                  );\n                                }}\n                              />\n                            </div>\n                          </div>\n                          <div className=\"col-4 col-md-2\">\n                            <div className=\"form-control\">\n                              <label htmlFor=\"qty\">qty</label>\n                              <input\n                                type=\"number\"\n                                name=\"quantity\"\n                                id=\"qty\"\n                                className=\"input\"\n                                value={qty}\n                                required\n                                onChange={(e) => {\n                                  setItemsList(\n                                    itemsList.map((ele) =>\n                                      ele.itemListID === itemListID\n                                        ? {\n                                            ...ele,\n                                            qty: e.target.value,\n                                            total: handleTotal(qty, price),\n                                          }\n                                        : ele\n                                    )\n                                  );\n                                }}\n                              />\n                            </div>\n                          </div>\n                          <div className=\"col-4 col-md-3\">\n                            <div className=\"form-control\">\n                              <label htmlFor=\"price\">price</label>\n                              <input\n                                type=\"number\"\n                                name=\"price\"\n                                id=\"price\"\n                                className=\"input\"\n                                value={price}\n                                onChange={(e) => {\n                                  setItemsList(\n                                    itemsList.map((ele) =>\n                                      ele.itemListID === itemListID\n                                        ? {\n                                            ...ele,\n                                            price: e.target.value,\n                                            total: handleTotal(qty, price),\n                                          }\n                                        : ele\n                                    )\n                                  );\n                                }}\n                              />\n                            </div>\n                          </div>\n                          <div className=\"col-4 col-md-2\">\n                            <div className=\"form-control\">\n                              <label htmlFor=\"total\">total</label>\n                              <p className=\"total\" id=\"total\">\n                                {total}\n                              </p>\n                            </div>\n                          </div>\n                          <div className=\"col-4 col-md-1\">\n                            <div className=\"form-control\">\n                              <button\n                                className=\"remove-btn\"\n                                onClick={() => handleDelete(itemListID)}\n                              >\n                                <BsBasket />\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                  <div className=\"add-new-item\">\n                    <button className=\"add-item\" onClick={setAddItem(true)}>\n                      add item\n                    </button>\n                  </div>\n                </section>\n\n                <section className=\"form-btn-handelers\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-6 col-12 text-sm-start text-xs-center\">\n                      <button\n                        className=\"btn-handler\"\n                        onClick={() => {\n                          setAddInv(false);\n                          setIsEdit(false);\n                          setInvoiceData(resetInvoiceData);\n                          setItemsList([resetItemList]);\n                        }}\n                      >\n                        discard\n                      </button>\n                    </div>\n                    <div className=\"col-12 col-sm-6 order-first order-sm-last text-xs-center text-xs-end\">\n                      <div className=\"handelers-container\">\n                        {addInv && (\n                          <button\n                            className=\"btn-handler\"\n                            onClick={() => {\n                              setIsDraft(true);\n                            }}\n                          >\n                            save as draft\n                          </button>\n                        )}\n                        <button\n                          className=\"btn-handler send-btn\"\n                          onClick={() => {\n                            if (addInv) {\n                              setIsNew(true);\n                            }\n                            if (isEdit) {\n                              setUpdateInvoice(true);\n                            }\n                          }}\n                        >\n                          {addInv && \"save & send\"}\n                          {isEdit && \"save changes\"}\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </section>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </article>\n  );\n}\n\nexport default AddInvoice;\n","import { BsPlusSquareDotted } from \"react-icons/bs\";\nimport { useGlobalContext } from \"./AppProvider\";\nfunction InvoiceHint() {\n  const { setAddInv } = useGlobalContext();\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-8 m-auto\">\n        <section className=\"invoice-hint\">\n          <div className=\"add-newInvoice\" onClick={() => setAddInv(true)}>\n            <BsPlusSquareDotted />\n            <h1>add new invoice</h1>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default InvoiceHint;\n","import Header from \"./Header\";\nimport Invoices from \"./Invoices\";\nimport AddInvoice from \"./AddInvoice\";\nimport InvoiceHint from \"./InvoiceHint\";\nimport { useGlobalContext } from \"./AppProvider\";\n\nfunction Content() {\n  const { addInv, invoices } = useGlobalContext();\n  return (\n    <article className=\"app-container\">\n      <div className=\"container\">\n        <div className=\"page\">\n          <Header />\n          {invoices.length === 0 && <InvoiceHint />}\n          <Invoices />\n        </div>\n        {addInv && <AddInvoice />}\n      </div>\n    </article>\n  );\n}\n\nexport default Content;\n","import { Link } from \"react-router-dom\";\nimport { useGlobalContext } from \"./AppProvider\";\n\nfunction Alert({ id }) {\n  const { dispatch, setIsAlert } = useGlobalContext();\n\n  return (\n    <section className=\"alert\">\n      <div className=\"alert__container\">\n        <div className=\"error-sign\">\n          <span className=\"first\"></span>\n          <span className=\"second\"></span>\n        </div>\n        <h5 className=\"heading\">confirm deletion</h5>\n        <p className=\"confirm-message\">\n          Are you sure you want to delete invoice {id} <br /> This action cannot\n          be undone.\n        </p>\n        <div className=\"actions-btn\">\n          <Link\n            className=\"confirm btn\"\n            to=\"/\"\n            onClick={() => {\n              dispatch({\n                type: \"DELETE_INVOICE\",\n                payload: id,\n              });\n              setIsAlert(false);\n            }}\n          >\n            delete\n          </Link>\n          <button className=\"discard btn\" onClick={() => setIsAlert(false)}>\n            cancel\n          </button>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Alert;\n","import { useParams } from \"react-router\";\nimport { useGlobalContext } from \"./AppProvider\";\nimport AddInvoice from \"./AddInvoice\";\nimport { BiChevronLeft } from \"react-icons/bi\";\nimport { Link } from \"react-router-dom\";\nimport Alert from \"./Alert\";\nimport { useEffect } from \"react\";\n\n\nfunction CurrentInvoice() {\n  const {\n    invoices,\n    dispatch,\n    isEdit,\n    setIsEdit,\n    setInvoiceData,\n    invoiceData,\n    setItemsList,\n    DateFn,\n    paymentDue,\n    isAlert,\n    setIsAlert,\n  } = useGlobalContext();\n  const param = useParams();\n  const invoice = invoices.find((invoice) => invoice.invoiceID === param.id);\n\n  const {\n    invoiceID,\n    streetFrom,\n    cityFrom,\n    postCodeFrom,\n    countryFrom,\n    clientName,\n    clientEmail,\n    streetTo,\n    cityTo,\n    postCodeTo,\n    countryTo,\n    paymentTerms,\n    projectDescription,\n    status,\n    date,\n    itemList,\n  } = invoice;\n\n  const finalPriceMap = itemList.map((item) => {\n    return item.total;\n  });\n\n  const finalPriceReduce = finalPriceMap.reduce((acc, item) => {\n    return acc + item;\n  });\n\n  useEffect(() => {\n    if (isEdit || isAlert) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"auto\";\n    }\n  }, [isAlert, isEdit]);\n\n  return (\n    <article className=\"currentInvoice w-100\">\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-8\">\n            <div className=\"currentInvoice-container\">\n              <header className=\"header\">\n                <div className=\"back-to-home\">\n                  <Link to=\"/\" className=\"back-to-home-btn\">\n                    <BiChevronLeft />\n                    Go Back\n                  </Link>\n                </div>\n                <div className=\"invoice-actions\">\n                  <div className=\"status-container\">\n                    <span>status</span>\n                    <div className={`status ${status}`}>{status}</div>\n                  </div>\n                  <div className=\"actions-container\">\n                    {status === \"pending\" || status === \"draft\" ? (\n                      <button\n                        className=\"btn edit\"\n                        onClick={() => {\n                          setIsEdit(true);\n                          setInvoiceData({\n                            ...invoiceData,\n                            invoiceID,\n                            streetFrom,\n                            cityFrom,\n                            postCodeFrom,\n                            countryFrom,\n                            clientName,\n                            clientEmail,\n                            streetTo,\n                            cityTo,\n                            postCodeTo,\n                            countryTo,\n                            paymentTerms,\n                            projectDescription,\n                          });\n                          setItemsList(itemList);\n                        }}\n                      >\n                        edit\n                      </button>\n                    ) : (\n                      \"\"\n                    )}\n\n                    <button\n                      className=\"btn delete\"\n                      to=\"/\"\n                      onClick={() => setIsAlert(true)}\n                    >\n                      delete\n                    </button>\n                    {status === \"pending\" && (\n                      <button\n                        className=\"btn paid\"\n                        onClick={() => {\n                          dispatch({ type: \"PAID_ITEM\", payload: invoiceID });\n                        }}\n                      >\n                        mark as paid\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </header>\n              <section className=\"currentInvoice-details\">\n                <div className=\"heading-container\">\n                  <h5 className=\"heading\">\n                    <span className=\"hash\">#</span>\n                    {invoiceID}\n                  </h5>\n                  <p className=\"description-detail\">\n                    {projectDescription || \"N/A\"}\n                  </p>\n                </div>\n                <div className=\"sender-info box\">\n                  <h6>sender info</h6>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <div className=\"box-inner\">\n                        <p>street:</p>\n                        <span>{streetFrom || \"N/A\"}</span>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <div className=\"box-inner\">\n                        <p>city:</p>\n                        <span>{cityFrom || \"N/A\"}</span>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <div className=\"box-inner\">\n                        <p>post code:</p>\n                        <span>{postCodeFrom || \"N/A\"}</span>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <div className=\"box-inner\">\n                        <p>country:</p>\n                        <span>{countryFrom || \"N/A\"}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"client-info box\">\n                  <h6>client info</h6>\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <div className=\"box-inner\">\n                        <p>client name:</p>\n                        <span className=\"name\">{clientName || \"N/A\"}</span>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <div className=\"box-inner\">\n                        <p>street:</p>\n                        <span>{streetTo || \"N/A\"}</span>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <div className=\"box-inner\">\n                        <p>city:</p>\n                        <span>{cityTo || \"N/A\"}</span>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <div className=\"box-inner\">\n                        <p>post code:</p>\n                        <span>{postCodeTo || \"N/A\"}</span>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <div className=\"box-inner\">\n                        <p>country:</p>\n                        <span>{countryTo || \"N/A\"}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"other-info box\">\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <h6>invoice date</h6>\n                      <div className=\"box-inner\">\n                        <span>{DateFn(date) || \"N/A\"}</span>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <h6>payment due</h6>\n                      <div className=\"box-inner\">\n                        <span>{paymentDue(date, paymentTerms) || \"N/A\"}</span>\n                      </div>\n                    </div>\n                    <div className=\"col-md-12\">\n                      <h6>sent to</h6>\n                      <div className=\"box-inner\">\n                        <span>{clientEmail || \"N/A\"}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"itemsTable-container\">\n                  <table className=\"table items-table\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">item name</th>\n                        <th scope=\"col\">qty</th>\n                        <th scope=\"col\">price</th>\n                        <th scope=\"col\">total</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {itemList.map((item) => {\n                        const { itemName, price, qty, total, itemListID } =\n                          item;\n                        return (\n                          <tr key={itemListID}>\n                            <th scope=\"row\">{itemName || \"N/A\"}</th>\n                            <td>{qty}</td>\n                            <td>{price}</td>\n                            <td>${total}</td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                    <tfoot>\n                      <tr>\n                        <td colSpan=\"3\">grand total</td>\n                        <td>${finalPriceReduce}</td>\n                      </tr>\n                    </tfoot>\n                  </table>\n                </div>\n              </section>\n            </div>\n          </div>\n        </div>\n      </div>\n      {isEdit && <AddInvoice />}\n      {isAlert && <Alert id={invoiceID} />}\n    </article>\n  );\n}\n\nexport default CurrentInvoice;\n","import Aside from \"./Aside\";\nimport Content from \"./Content\";\nimport CurrentInvoice from \"./CurrentInvoice\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction Main() {\n  return (\n    <main className=\"main-container d-flex\">\n      <Router>\n        <Aside />\n        <Switch>\n          <Route exact path=\"/\">\n            <Content />\n          </Route>\n          <Route path=\"/:id\" children={<CurrentInvoice />} />\n        </Switch>\n      </Router>\n    </main>\n  );\n}\n\nexport default Main;\n","import Main from \"./Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { AppProvider } from \"./components/AppProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}